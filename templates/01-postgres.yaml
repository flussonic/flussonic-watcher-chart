{{- if .Values.postgres.create -}}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-postgres
  labels:
    name: {{ .Release.Name }}-postgres
spec:
  ports:
  - port: 5432
    targetPort: 5432
    name: postgres
  selector:
    app: {{ .Release.Name }}-postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-postgres
spec:
  serviceName: {{ .Release.Name }}-postgres
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-postgres
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-postgres
    spec:
      containers:
      - name: postgres
        image: "{{ .Values.postgres.repository }}:{{ .Values.postgres.tag }}"
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: test
        - name: POSTGRES_PASSWORD
          value: test
        - name: POSTGRES_DB
          value: test_c
        - name: POSTGRES_HOST_AUTH_METHOD
          value: trust
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - exec pg_isready -U "postgres" -h 127.0.0.1
          failureThreshold: 2
          initialDelaySeconds: 120
          periodSeconds: 60
          timeoutSeconds: 30
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            subPath: data
            name: data
      volumes:
        - name: data
          hostPath:
            path: /watcher/postgresql
            type: Directory
      {{- with .Values.postgres.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
