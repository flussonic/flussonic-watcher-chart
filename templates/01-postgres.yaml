{{- if .Values.postgres.create -}}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "flussonic-watcher-chart.fullname" . }}-postgres
  labels:
    name: {{ include "flussonic-watcher-chart.fullname" . }}-postgres
spec:
  ports:
  - port: 5432
    targetPort: 5432
    name: postgres
  selector:
    app: {{ include "flussonic-watcher-chart.fullname" . }}-postgres
# ---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   name: postgres-pv
#   # labels:
#   #   app: {{ include "flussonic-watcher-chart.fullname" . }}-postgres
# spec:
#   storageClassName: local-storage
#   capacity:
#     storage: 1Gi
#   accessModes:
#   - ReadWriteOnce
#   hostPath:
#     path: /var/lib/postgresql/data
#   nodeAffinity:
#       required:
#         nodeSelectorTerms:
#         - matchExpressions:
#           - key: flussonic.com/database
#             operator: In
#             values:
#             - "true"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  # storageClassName: local-path
  # storageClassName: ""
  storageClassName: longhorn
  resources:
    requests:
      storage: 1Gi
  # selector:
  #   matchLabels:
  #     app: {{ include "flussonic-watcher-chart.fullname" . }}-postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "flussonic-watcher-chart.fullname" . }}-postgres
spec:
  serviceName: {{ include "flussonic-watcher-chart.fullname" . }}-postgres
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "flussonic-watcher-chart.fullname" . }}-postgres
  template:
    metadata:
      labels:
        app: {{ include "flussonic-watcher-chart.fullname" . }}-postgres
    spec:
      containers:
      - name: {{ include "flussonic-watcher-chart.fullname" . }}-postgres
        image: "{{ .Values.postgres.repository }}:{{ .Values.postgres.tag }}"
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: test
        - name: POSTGRES_PASSWORD
          value: test
        - name: POSTGRES_DB
          value: test_c
        - name: POSTGRES_HOST_AUTH_METHOD
          value: trust
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - exec pg_isready -U "postgres" -h 127.0.0.1
          failureThreshold: 2
          initialDelaySeconds: 120
          periodSeconds: 60
          timeoutSeconds: 30
        volumeMounts:
      #     - mountPath: /dev/shm
      #       name: dshm
          - mountPath: /var/lib/postgresql/data
            subPath: data
            name: data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: postgres-pvc
      #   - name: dshm
      #     persistentVolumeClaim:
      #       claimName: postgresql-dshm-pvc
      {{- with .Values.postgres.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
