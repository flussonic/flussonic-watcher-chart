{{- if .Values.watcher.create -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: watcher-firstrun
spec:
  backoffLimit: 20
  activeDeadlineSeconds: 180
  template:
    spec:
      containers:
      - name: watcher-firstrun
        image: "{{ .Values.watcher.repository }}:{{ .Values.watcher.tag }}"
        env:
        - name: DB
          value: postgresql://test:test@{{ include "flussonic-watcher-chart.fullname" . }}-postgres.{{ $.Release.Namespace }}.svc.cluster.local:5432/test_c
        - name: REDIS
          value: redis://{{ include "flussonic-watcher-chart.fullname" . }}-redis.{{ $.Release.Namespace }}.svc.cluster.local:9017
        - name: CENTRAL_URL
          value: http://apikey0@{{ include "flussonic-watcher-chart.fullname" . }}-central.{{ $.Release.Namespace }}.svc.cluster.local/streamer/api/v3
        - name: PORT
          value: "5000"
        - name: WATCHER_ADMIN_LOGIN
          valueFrom:
            secretKeyRef:
              name: watcher-admin
              key: login
              optional: false
        - name: WATCHER_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: watcher-admin
              key: pass
              optional: false
        command:
        - /bin/sh
        - -c
        - |
          /opt/flussonic/bin/python3 -m manage check &&
          /opt/flussonic/bin/python3 -m manage ensure_api_key &&
          /opt/flussonic/bin/watcher-firstrun.sh
      restartPolicy: OnFailure
{{- end }}
